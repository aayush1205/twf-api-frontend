{"ast":null,"code":"var _jsxFileName = \"/home/aayush/twf/challenge-2/c2/src/components/Form.js\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comp = props => {\n  const {\n    A,\n    setA,\n    B,\n    setB,\n    C,\n    setC,\n    D,\n    setD,\n    E,\n    setE,\n    F,\n    setF,\n    G,\n    setG,\n    H,\n    setH,\n    I,\n    setI,\n    answer,\n    setAnswer\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TWF FLOURS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoFocus: true,\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), !hasAccount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Place of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: placeOfBirth,\n          onChange: e => setPlaceOfBirth(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          required: true,\n          value: dob,\n          onChange: e => setDob(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnContainer\",\n        children: hasAccount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogin,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account ?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHasAccount(!hasAccount),\n              children: \"Sign Up!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignUp,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Have an account ?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHasAccount(!hasAccount),\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Comp;\nexport default Comp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comp\");","map":{"version":3,"sources":["/home/aayush/twf/challenge-2/c2/src/components/Form.js"],"names":["React","Form","Button","Comp","props","A","setA","B","setB","C","setC","D","setD","E","setE","F","setF","G","setG","H","setH","I","setI","answer","setAnswer","email","e","setEmail","target","value","emailError","password","setPassword","passwordError","hasAccount","placeOfBirth","setPlaceOfBirth","dob","setDob","handleLogin","setHasAccount","handleSignUp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"bootstrap\";\n\nconst Comp = (props) => {\n  const {\n    A,\n    setA,\n    B,\n    setB,\n    C,\n    setC,\n    D,\n    setD,\n    E,\n    setE,\n    F,\n    setF,\n    G,\n    setG,\n    H,\n    setH,\n    I,\n    setI,\n    answer,\n    setAnswer,\n  } = props;\n  return (\n    <section>\n      <div>\n        <h2>TWF FLOURS</h2>\n        <label>Username</label>\n        <input\n          type=\"text\"\n          autoFocus\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <p className=\"errorMsg\">{emailError}</p>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p className=\"errorMsg\">{passwordError}</p>\n        {!hasAccount ? (\n          <>\n            <label>Place of Birth</label>\n            <input\n              type=\"text\"\n              required\n              value={placeOfBirth}\n              onChange={(e) => setPlaceOfBirth(e.target.value)}\n            />\n            <label>Date of Birth</label>\n            <input\n              type=\"date\"\n              required\n              value={dob}\n              onChange={(e) => setDob(e.target.value)}\n            />\n          </>\n        ) : (\n          <></>\n        )}\n        <div className=\"btnContainer\">\n          {hasAccount ? (\n            <>\n              <button onClick={handleLogin}>Sign In</button>\n              <p>\n                Don't have an account ?{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign Up!</span>\n              </p>\n            </>\n          ) : (\n            <>\n              <button onClick={handleSignUp}>Sign Up</button>\n              <p>\n                Have an account ?{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Comp;\n"]},"metadata":{},"sourceType":"module"}